package com.jitendra.todolist.controller;



import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.jitendra.todolist.entity.ToDoentity;
import com.jitendra.todolist.repo.ToDoRepo;

@RestController
public class ToDoController {

	@Autowired
	private ToDoRepo todorepo;
	
	@GetMapping("/")
	public List<ToDoentity> alltodoList(Model themodel) {
		
		//themodel.addAttribute("alltodolist", todorepo.findAll());
		
		//return "alltodos";
		return todorepo.findAll();
	}
	
	@PostMapping("/update") 
	public String showUpdate(@RequestParam("id") int theid,Model themodel) {
		
		themodel.addAttribute("updateitem", todorepo.findById(theid));
		return "updateForm";
	}
	
	@PostMapping("/save")
	public String saveForm(@Valid @ModelAttribute("updateitem") ToDoentity updateObj, BindingResult bindingResult) {
		System.out.println("/////////////"+updateObj.getItem()+"//////////////////");
		if (bindingResult.hasErrors()) {
			return "updateForm";
		}
		todorepo.save(updateObj);
		
		return "redirect:/";
	}
	
	
	
	@DeleteMapping("/delete/{theid}")
	public String deleteForm(@PathVariable int theid) {
		
		todorepo.deleteById(theid);
		
		//return "redirect:/";
		return "deleted success";
	}
	
	@PostMapping("/add")
	public ToDoentity addItem(@RequestBody ToDoentity theentity) {
		todorepo.save(theentity);
		
		//themodel.addAttribute("updateitem", empObj);
		return theentity;
	}
}
